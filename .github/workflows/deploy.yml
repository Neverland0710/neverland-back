name: 🚀 Deploy to EC2 with Docker Compose

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 👉 작업 디렉토리 이동
            cd ~/app

            # 🧹 기존 컨테이너 종료 및 정리
            docker-compose down || true
            docker system prune -f

            # 📥 최신 코드 가져오기
            rm -rf spring-server
            git clone https://github.com/Neverland0710/neverland-back.git spring-server

            # ✅ .env 생성
            cat > .env << 'ENV_EOF'
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            SERVER_PORT=8086
            SPRING_PROFILES_ACTIVE=prod
            FIREBASE_CONFIG_JSON=classpath:firebase_adminsdk.json
            ENV_EOF

            # ✅ Firebase Admin SDK JSON 파일 복원
            mkdir -p spring-server/src/main/resources
            echo "${{ secrets.FIREBASE_CONFIG_JSON_BASE64 }}" | base64 -d > spring-server/src/main/resources/firebase_adminsdk.json

            # 🐳 Docker Compose 실행
            echo "🔨 Building application..."
            docker-compose build --no-cache

            echo "🚀 Starting application..."
            docker-compose up -d

            echo "⏳ Waiting for application to start..."
            sleep 30

            echo "📊 Deployment Status:"
            docker-compose ps

            echo "📋 Application Logs:"
            docker-compose logs spring-server --tail 10

            echo "🏥 Health Check:"
            curl -f http://localhost:8086/actuator/health || echo "❌ Health check failed"

            echo "✅ Deployment completed!"
