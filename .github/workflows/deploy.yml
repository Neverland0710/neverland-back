name: 🚀 Fast Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout source
        uses: actions/checkout@v3

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🚀 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔨 Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test --parallel --build-cache

      - name: 📂 Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app/"

      - name: 🔐 Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            
            # 기존 컨테이너 정리
            docker stop spring-server || true
            docker rm spring-server || true
            
            # 간단한 Dockerfile 생성
            cat > Dockerfile << 'EOF'
            FROM openjdk:17-jdk-slim
            WORKDIR /app
            COPY build/libs/*.jar app.jar
            EXPOSE 8086
            ENTRYPOINT ["java", "-jar", "app.jar"]
            EOF
            
            # 빠른 빌드 및 실행
            docker build -t spring-app .
            docker run -d \
              --name spring-server \
              -p 8086:8086 \
              -e SPRING_DATASOURCE_URL="${{ secrets.DB_URL }}" \
              -e SPRING_DATASOURCE_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e SPRING_DATASOURCE_DRIVER_CLASS_NAME="com.mysql.cj.jdbc.Driver" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e FIREBASE_CONFIG_JSON='${{ secrets.FIREBASE_CONFIG_JSON }}' \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e S3_BUCKET_NAME="${{ secrets.S3_BUCKET_NAME }}" \
              -e AWS_REGION="${{ secrets.AWS_REGION }}" \
              -e SERVER_PORT="8086" \
              -e SPRING_PROFILES_ACTIVE="prod" \
              --restart always \
              spring-app
            
            # 상태 확인
            sleep 10
            docker ps
            docker logs spring-server --tail 20