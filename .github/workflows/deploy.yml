name: üê≥ Deploy Spring Boot with Docker to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout source
        uses: actions/checkout@v3

      - name: üîê Create .env file
        run: |
          cat <<EOL > .env
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}

          DB_URL=${{ secrets.DB_URL }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          JWT_SECRET=${{ secrets.JWT_SECRET }}
          FIREBASE_CONFIG_JSON=${{ secrets.FIREBASE_CONFIG_JSON }}

          # Ìè¨Ìä∏ ÏÑ§Ï†ï
          SERVER_PORT=8086

          # Spring profile
          SPRING_PROFILES_ACTIVE=prod
          EOL

      - name: üóùÔ∏è Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: üì° Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            mkdir -p ~/app
            cd ~/app

            if [ ! -d ".git" ]; then
              git clone https://github.com/${{ github.repository }} .
            else
              git pull origin main
            fi

            echo "‚úÖ .env ÌååÏùº ÏÉùÏÑ±"
            cat <<EOL > .env
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}

            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

            JWT_SECRET=${{ secrets.JWT_SECRET }}
            FIREBASE_CONFIG_JSON=${{ secrets.FIREBASE_CONFIG_JSON }}

            SERVER_PORT=8086
            SPRING_PROFILES_ACTIVE=prod
            EOL

            echo "üõ†Ô∏è Docker ÎπåÎìú Î∞è Ïû¨ÏãúÏûë"
            docker-compose down || true
            docker-compose up --build -d
          EOF
